output:
  - failure

pre-commit:
  parallel: true
  commands:
    format:
      glob: "*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}"
      run: npx @biomejs/biome check --write --no-errors-on-unmatched --files-ignore-unknown=true {staged_files}
      stage_fixed: true
    test:
      glob: "*.ts"
      run: npx vitest related --reporter=vitest-tiny-reporter --run {staged_files}
      fail_text: "Tests failed"
      env:
        TERM: dumb

    package-sync:
      glob: "package*.json"
      run: npm ls --depth=0 --silent
      fail_text: "Package.json and package-lock.json are out of sync. Run 'npm install' to fix."

pre-push:
  parallel: true
  commands:
    test:
      run: npx vitest --run --coverage --reporter=vitest-tiny-reporter
      fail_text: "Tests failed"
    check-format:
      run: npx @biomejs/biome check --no-errors-on-unmatched --files-ignore-unknown=true .
    publint:
      run: npm run build && npx --yes publint

commit-msg:
  commands:
    check-conventional:
      run: |
        # Basic conventional commit format validation
        if ! grep -qE "^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .{1,50}" "$1"; then
          echo "‚ùå Commit message must follow conventional commit format:"
          echo "   type(scope): description"
          echo ""
          echo "   Types: feat, fix, docs, style, refactor, test, chore, perf, ci, build, revert"
          echo "   Example: feat(cli): add port calculation for scoped packages"
          exit 1
        fi
